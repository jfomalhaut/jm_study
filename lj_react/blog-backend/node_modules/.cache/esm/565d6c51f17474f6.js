let jwt,decode,User;_f17‍.x([["default",()=>_f17‍.o]]);_f17‍.w("jsonwebtoken",[["default",["jwt"],function(v){jwt=v}],["decode",["decode"],function(v){decode=v}]]);_f17‍.w("../models/user",[["default",["User"],function(v){User=v}]]);


const jwtMiddleware = async (ctx, next) => {
  const token = ctx.cookies.get('access_token');
  if (!token) return next();
  try {
    const decoded = jwt.verify(token, process.env.JWT_SECRET);
    ctx.state.user = {
        _id:decoded._id,
        username:decoded.username,
    };
    const now = Math.floor(Date.now()/1000);
    if(decoded.exp - now < 60*60*24*3.5){
        const user = await User.findById(decoded._id);
        const token = user.generateToken();
        ctx.cookies.set('access_token', token, {
            maxAge: 1000*60*60*24*7,
            httpOnly:true,
        })
    }
    _f17‍.g.console.log(decoded);
    return next();
  } catch (e) {
    return next();
  }
};

_f17‍.d(jwtMiddleware);
