{"version":3,"sources":["lib/styles/palette.js","components/common/Button.js","components/common/Responsive.js","components/common/Header.js","lib/api/client.js","lib/api/auth.js","modules/loading.js","lib/createRequestSaga.js","modules/user.js","containers/common/HeaderContainer.js","components/common/SubInfo.js","components/common/Tags.js","components/img/0002.jpg","components/posts/PostList.js","modules/posts.js","lib/api/posts.js","containers/posts/PostListContainer.js","components/posts/Pagination.js","containers/posts/PaginationContainer.js","pages/PostListPage.js","components/post/PostViewer.js","modules/post.js","components/common/AskModal.js","components/post/AskRemoveModal.js","components/post/PostActionButtons.js","modules/write.js","containers/post/PostViewerContainer.js","pages/PostPage.js","components/auth/AuthTemplate.js","components/auth/AuthForm.js","modules/auth.js","containers/auth/RegisterForm.js","pages/RegisterPage.js","containers/auth/LoginForm.js","pages/LoginPage.js","components/write/Editor.js","components/write/TagBox.js","components/write/WriteActionButtons.js","containers/write/EditorContainer.js","containers/write/TagBoxContainer.js","containers/write/WriteActionButtonsContainer.js","pages/WritePage.js","App.js","reportWebVitals.js","modules/index.js","index.js"],"names":["palette","gray","cyan","StyledButton","styled","button","props","fullWidth","css","withRouter","to","history","rest","onClick","e","push","ResponsiveBlock","div","Responsive","children","HeaderBlock","Wrapper","Spacer","UserInfo","Header","user","onLogout","className","username","client","axios","create","logout","post","START_LOADING","FINISH_LOADING","startLoading","createAction","requestType","finishLoading","loading","handleActions","state","action","payload","createRequestActionTypes","type","createRequestSaga","request","SUCCESS","FAILURE","put","call","response","data","meta","error","logoutSaga","userSaga","TEMP_SET_USER","CHECK","CHECK_SUCCESS","CHECK_FAILURE","LOGOUT","tempSetUser","check","checkSaga","get","checkFailureSaga","localStorage","removeItem","console","log","authAPI","takeLatest","checkError","HeaderContainer","useSelector","dispatch","useDispatch","SubInfoBlock","hasMarginTop","SubInfo","publishedDate","Date","toLocaleDateString","TagBlock","Tags","tags","map","tag","PostListBlock","img6","WritePostButtonWrapper","PostItemBlock","PostItem","title","body","_id","PostList","posts","showWriteButton","postsSaga","LIST_POSTS","LIST_POSTS_SUCCESS","LIST_POSTS_FAILURE","listPosts","page","listPostsSaga","queryString","qs","stringify","lastPage","parseInt","headers","location","match","useEffect","params","parse","search","ignoreQueryPrefix","PaginationBlock","PageNumber","buildLink","query","Pagination","disabled","undefined","PostListPage","PostViewerBlock","PostHead","PostContent","PostViewer","actionButtons","status","dangerouslySetInnerHTML","__html","postSaga","READ_POST","READ_POST_SUCCESS","READ_POST_FAILURE","UNLOAD_POST","readPost","id","unloadPost","readPostSaga","initialState","Fullscreen","AskModalBlock","Button","AskModal","visible","description","confirmText","cancelText","onConfirm","onCancel","AskRemoveModal","PostActionButtonBlock","ActionButton","PostActionButtons","onEdit","onRemove","useState","modal","setModal","writeSaga","INITIALIZE","CHANGE_FIELD","WRITE_POST","WRITE_POST_SUCCESS","WRITE_POST_FAILURE","SET_ORIGINAL_POST","UPDATE_POST","UPDATE_POST_SUCCESS","UPDATE_POST_FAILURE","initialize","changeField","key","value","writePost","setOriginalPost","updatePost","writePostSaga","updatePostSaga","patch","postError","originalPostId","write","postId","a","delete","ownPost","PostPage","AuthTemplateBlock","img_flower","WhiteBox","AuthTemplate","AuthFormBlock","StyledInput","input","Fotter","ButtonWithMarginTop","textMap","login","register","ErrorMessage","AuthForm","form","onChange","onSubmit","text","autoComplete","name","placeholder","autoComplate","password","passwordConfirm","authSaga","INITIALIZE_FORM","REGISTER","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN","LOGIN_SUCCESS","LOGIN_FAILURE","initializeForm","registerSaga","loginSaga","auth","authError","produce","draft","setError","setItem","JSON","target","preventDefault","includes","RegisterPage","LoginPage","EditorBlock","TitleInput","QuillWrapper","Editor","onChangeField","quillElement","useRef","quillInstance","current","Quill","theme","modules","toolbar","header","list","quill","on","delta","oldDelta","source","root","innerHTML","mounted","ref","TagBoxBlock","TagForm","Tag","TagListBlock","TagItem","React","memo","TagList","TagBox","onChangeTags","setInput","localTags","setLocalTags","insertTag","useCallback","nextTags","filter","t","trim","WriteActionButtonsBlock","WriteActionButtons","onPublish","isEdit","EditorContainer","TagBoxContainer","goBack","WritePage","WriteActionButtonsContainer","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootSaga","all","rootReducer","combineReducers","sagaMiddleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","run","getItem","loadUser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85dfe983.chunk.js","sourcesContent":["// source: https://yeun.github.io/open-color/\r\nconst palette = {\r\n    gray: [\r\n      '#f8f9fa',\r\n      '#f1f3f5',\r\n      '#e9ecef',\r\n      '#dee2e6',\r\n      '#ced4da',\r\n      '#adb5bd',\r\n      '#868e96',\r\n      '#495057',\r\n      '#343a40',\r\n      '#212529'\r\n    ],\r\n    cyan: [\r\n      '#e3fafc',\r\n      '#c5f6fa',\r\n      '#99e9f2',\r\n      '#66d9e8',\r\n      '#3bc9db',\r\n      '#22b8cf',\r\n      '#15aabf',\r\n      '#1098ad',\r\n      '#0c8599',\r\n      '#0b7285'\r\n    ]\r\n  };\r\n  \r\n  export default palette;","import React from 'react';\r\nimport styled, { css } from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst StyledButton = styled.button`\r\n  border: none;\r\n  border-radius: 10px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  padding: 0.25rem, 1rem;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n  background: ${palette.gray[8]};\r\n  &:hover {\r\n    background: ${palette.gray[5]};\r\n  }\r\n  &:disabled{\r\n    background: ${palette.gray[2]};\r\n    color: ${palette.gray[5]};\r\n    cursor: not-allowed;\r\n  }\r\n  ${(props) =>\r\n    props.fullWidth &&\r\n    css`\r\n      padding-top: 0.75rem;\r\n      padding-bottom: 0.75rem;\r\n      width: 100%;\r\n      font-size: 1.125rem;\r\n    `}\r\n  ${(props) =>\r\n    props.cyan &&\r\n    css`\r\n      background: ${palette.cyan[5]};\r\n      &:hover {\r\n        background: ${palette.cyan[2]};\r\n      }\r\n    `}\r\n`;\r\n\r\nconst Button = ({ to, history, ...rest }) => {\r\n  const onClick = (e) => {\r\n    if (to) {\r\n      history.push(to);\r\n    }\r\n    if (rest.onClick) {\r\n      rest.onClick(e);\r\n    }\r\n  };\r\n  return <StyledButton {...rest} onClick={onClick} />;\r\n};\r\n\r\nexport default withRouter(Button);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst ResponsiveBlock = styled.div`\r\n    padding-left: 1rem;\r\n    padding-right: 1rem;\r\n    width: 1024px;\r\n    margin: 0 auto;\r\n\r\n    @media (max-width: 1024px){\r\n        width: 768px;\r\n    }\r\n    @media (max-width: 768px){\r\n        width: 100%auto;\r\n    }\r\n`;\r\n\r\nconst Responsive = ({ children, ...rest}) => {\r\n    return <ResponsiveBlock {...rest}>{children}</ResponsiveBlock>\r\n};\r\n\r\nexport default Responsive;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from './Responsive';\r\nimport Button from './Button';\r\nimport palette from '../../lib/styles/palette';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst HeaderBlock = styled.div`\r\n  opacity:0.7;\r\n  position: fixed;\r\n  width: 100%;\r\n  background: ${palette.gray[3]};\r\n  box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst Wrapper = styled(Responsive)`\r\n  height: 4rem;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  .logo {\r\n    font-size: 1.7rem;\r\n    font-weight: 500;\r\n    letter-spacing: 2px;\r\n  }\r\n  .right {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n`;\r\n\r\nconst Spacer = styled.div`\r\n  height: 4rem;\r\n`;\r\n\r\nconst UserInfo = styled.div`\r\n  font-weight: 500;\r\n  font-size:1.5rem;\r\n  margin-right: 1rem;\r\n`;\r\nconst Header = ({ user, onLogout }) => {\r\n  return (\r\n    <>\r\n      <HeaderBlock>\r\n        <Wrapper>\r\n          <Link to=\"/\" className=\"logo\">\r\n            Diary With You\r\n          </Link>\r\n          {user ? (\r\n            <div className=\"right\">\r\n              <UserInfo>{user.username}</UserInfo>\r\n              <Button onClick={onLogout}>로그아웃</Button>\r\n            </div>\r\n          ) : (\r\n            <div className=\"right\">\r\n              <Button to=\"/login\">로그인</Button>\r\n            </div>\r\n          )}\r\n        </Wrapper>\r\n      </HeaderBlock>\r\n      <Spacer />\r\n    </>\r\n  );\r\n};\r\nexport default Header;\r\n","import axios from 'axios';\r\n\r\nconst client = axios.create();\r\n\r\nexport default client;","import client from './client';\r\n\r\nexport const login = ({ username, password }) =>\r\n    client.post('/api/auth/login', {username, password });\r\n\r\nexport const register = ({ username, password }) => \r\n    client.post('/api/auth/register', {username, password});\r\n\r\nexport const check = () => client.get('/api/auth/check');\r\n\r\nexport const logout = () => client.post('/api/auth/logout');","import { createAction, handleActions } from 'redux-actions';\r\n\r\nconst START_LOADING = 'loading/START_LOADING';\r\nconst FINISH_LOADING = 'loading/FINISH_LOADING';\r\n\r\nexport const startLoading = createAction(\r\n  START_LOADING,\r\n  (requestType) => requestType,\r\n);\r\n\r\nexport const finishLoading = createAction(\r\n  FINISH_LOADING,\r\n  (requestType) => requestType,\r\n);\r\n\r\nconst initialState = {};\r\n\r\nconst loading = handleActions(\r\n  {\r\n    [START_LOADING]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: true,\r\n    }),\r\n    [FINISH_LOADING]: (state, action) => ({\r\n      ...state,\r\n      [action.payload]: false,\r\n    }),\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default loading;","import { call, put } from 'redux-saga/effects';\r\nimport { startLoading, finishLoading } from '../modules/loading';\r\n\r\nexport const createRequestActionTypes = type => {\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n    return [type, SUCCESS, FAILURE];\r\n}\r\n\r\nexport default function createRequestSaga(type, request){\r\n    const SUCCESS = `${type}_SUCCESS`;\r\n    const FAILURE = `${type}_FAILURE`;\r\n\r\n    return function*(action){\r\n        yield put(startLoading(type)); //로딩시작\r\n        try{\r\n            const response = yield call(request, action.payload);\r\n            yield put({\r\n                type:SUCCESS,\r\n                payload:response.data,\r\n                meta: response,\r\n            });\r\n        }catch(e){\r\n            yield put({\r\n                type:FAILURE,\r\n                payload: e,\r\n                error:true,\r\n            });\r\n        }\r\n        yield put(finishLoading(type));\r\n    }\r\n}","import { createAction, handleActions } from 'redux-actions';\r\nimport { takeLatest, call } from 'redux-saga/effects';\r\nimport * as authAPI from '../lib/api/auth';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\n\r\nconst TEMP_SET_USER = 'user/TEMP_SET_USER';\r\nconst [CHECK, CHECK_SUCCESS, CHECK_FAILURE] =\r\n  createRequestActionTypes('user/CHECK');\r\nconst LOGOUT = 'user/LOGOUT';\r\n\r\nexport const tempSetUser = createAction(TEMP_SET_USER, (user) => user);\r\nexport const check = createAction(CHECK);\r\nexport const logout = createAction(LOGOUT);\r\n\r\nconst checkSaga = createRequestSaga(CHECK, authAPI.check);\r\nfunction checkFailureSaga() {\r\n  try {\r\n    localStorage.removeItem('user');\r\n  } catch (e) {\r\n    console.log('localStorage is not working');\r\n  }\r\n}\r\nfunction* logoutSaga() {\r\n  try {\r\n    yield call(authAPI.logout);\r\n    localStorage.removeItem('user');\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n}\r\n\r\nexport function* userSaga() {\r\n  yield takeLatest(CHECK, checkSaga);\r\n  yield takeLatest(CHECK_FAILURE, checkFailureSaga);\r\n  yield takeLatest(LOGOUT, logoutSaga);\r\n}\r\n\r\nconst initialState = {\r\n  user: null,\r\n  checkError: null,\r\n};\r\nexport default handleActions(\r\n  {\r\n    [TEMP_SET_USER]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n    }),\r\n    [CHECK_SUCCESS]: (state, { payload: user }) => ({\r\n      ...state,\r\n      user,\r\n      checkError: null,\r\n    }),\r\n    [CHECK_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      user: null,\r\n      checkError: error,\r\n    }),\r\n    [LOGOUT]: state=>({\r\n      ...state,\r\n      user:null,\r\n    })\r\n  },\r\n  initialState,\r\n);\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Header from '../../components/common/Header';\r\nimport { logout } from '../../modules/user';\r\n\r\nconst HeaderContainer = () => {\r\n    const {user} = useSelector(({user}) => ({user: user.user}));\r\n    const dispatch = useDispatch();\r\n    const onLogout = () => {\r\n        dispatch(logout());\r\n    }\r\n    console.log(user)\r\n    return <Header user={user} onLogout={onLogout}/>\r\n}\r\n\r\nexport default HeaderContainer;","import React from 'react';\r\nimport styled, {css} from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst SubInfoBlock = styled.div`\r\n    ${props =>\r\n    props.hasMarginTop &&\r\n    css`\r\n        margin-top:1rem;`\r\n        }\r\n    color: ${palette.gray[6]};\r\n    span+span:before{\r\n        color: ${palette.gray[4]};\r\n        padding-left: 0.25rem;\r\n        padding-right: 0.25rem;\r\n        content: '\\\\B7';\r\n    }\r\n`;\r\n\r\nconst SubInfo = ({ username, publishedDate, hasMarginTop }) => {\r\n    return(\r\n        <SubInfoBlock hasMarginTop={hasMarginTop}>\r\n            <span>\r\n                <b>\r\n                    <Link to={`/@${username}`}>{username}</Link>\r\n                </b>\r\n            </span>\r\n            <span>{new Date(publishedDate).toLocaleDateString()}</span>\r\n        </SubInfoBlock>\r\n        \r\n    )\r\n}\r\n\r\nexport default SubInfo;","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst TagBlock = styled.div`\r\n  margin-top: 0.5rem;\r\n  .tag {\r\n    display: inline-block;\r\n    color: ${palette.cyan[7]};\r\n    text-decoration: none;\r\n    margin-right: 0.5rem;\r\n    &:hover {\r\n      color: ${palette.cyan[6]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tags = ({ tags }) => {\r\n  return (\r\n    <TagBlock>\r\n      {tags.map((tag) => (\r\n        <Link className=\"tag\" to={`/?tag=${tag}`} key={tag}>\r\n          #{tag}\r\n        </Link>\r\n      ))}\r\n    </TagBlock>\r\n  );\r\n};\r\n\r\nexport default Tags;","export default __webpack_public_path__ + \"static/media/0002.30684a44.jpg\";","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Responsive from '../common/Responsive';\r\nimport Button from '../common/Button';\r\nimport palette from '../../lib/styles/palette';\r\nimport SubInfo from '../common/SubInfo';\r\nimport Tags from '../common/Tags';\r\nimport { Link } from 'react-router-dom';\r\nimport img6 from '../img/0002.jpg';\r\n\r\nconst PostListBlock = styled(Responsive)`\r\n  margin-top: 1rem;\r\n  /* background-image: url(${img6}); */\r\n\r\n  /* background-image: repeating-linear-gradient(green 20%); */\r\n`;\r\n\r\nconst WritePostButtonWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 3rem;\r\n`;\r\n\r\nconst PostItemBlock = styled.div`\r\n  padding-top: 0.5rem;\r\n  padding-bottom: 0.5rem;\r\n  &:first-child {\r\n    padding-top: 0;\r\n  }\r\n  & + & {\r\n    border-top: 1px solid ${palette.gray[6]};\r\n  }\r\n  h2 {\r\n    font-size: 1.5rem;\r\n    margin-bottom: 0;\r\n    margin-top: 0;\r\n    &:hover {\r\n      color: ${palette.gray[6]};\r\n    }\r\n  }\r\n  p {\r\n    margin-top: 0.5rem;\r\n  }\r\n`;\r\n\r\n// const SubInfo = styled.div`\r\n//   color: ${palette.gray[6]};\r\n//   span + span:before {\r\n//     color: ${palette.gray[4]};\r\n//     padding-left: 0.25rem;\r\n//     padding-right: 0.25rem;\r\n//     content: '\\\\B7';\r\n//   }\r\n// `;\r\n\r\n// const Tags = styled.div`\r\n//   margin-top: 0.5rem;\r\n//   .tag {\r\n//     display: inline-block;\r\n//     color: ${palette.cyan[7]};\r\n//     text-decoration: none;\r\n//     margin-right: 0.5rem;\r\n//     &:hover {\r\n//       color: ${palette.cyan[6]};\r\n//     }\r\n//   }\r\n// `;\r\nconst PostItem = ({ post }) => {\r\n  const { publishedDate, user, tags, title, body, _id } = post;\r\n  return (\r\n    <PostItemBlock>\r\n      <h2>\r\n        <Link to={`/@${user.username}/${_id}`}>{title}</Link>\r\n      </h2>\r\n      <SubInfo\r\n        username={user.username}\r\n        publishedDate={new Date(publishedDate)}\r\n      />\r\n      <Tags tags={tags} />\r\n      <p>{body}</p>\r\n    </PostItemBlock>\r\n  );\r\n};\r\nconst PostList = ({ posts, loading, error, showWriteButton }) => {\r\n  if (error) {\r\n    return <PostListBlock>에러가 발생했습니다.</PostListBlock>;\r\n  }\r\n  return (\r\n      <PostListBlock>\r\n        <WritePostButtonWrapper>\r\n          {showWriteButton && (\r\n            <Button cyan to=\"/write\">\r\n              새글 작성하기\r\n            </Button>\r\n          )}\r\n        </WritePostButtonWrapper>\r\n        {!loading && posts && (\r\n          <div>\r\n            {posts.map((post) => (\r\n              <PostItem post={post} key={post._id} />\r\n            ))}\r\n          </div>\r\n        )}\r\n      </PostListBlock>\r\n  );\r\n};\r\nexport default PostList;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport createRequestSaga, {createRequestActionTypes} from \"../lib/createRequestSaga\";\r\nimport * as postsAPI from '../lib/api/posts';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\nconst [\r\n    LIST_POSTS,\r\n    LIST_POSTS_SUCCESS,\r\n    LIST_POSTS_FAILURE,\r\n] = createRequestActionTypes('post/LIST_POSTS');\r\n\r\nexport const listPosts = createAction(\r\n    LIST_POSTS,\r\n    ({ tag, username, page }) => ({ tag, username, page}),\r\n)\r\n\r\nconst listPostsSaga = createRequestSaga(LIST_POSTS, postsAPI.listPosts);\r\nexport function* postsSaga(){\r\n    yield takeLatest(LIST_POSTS, listPostsSaga)\r\n};\r\n\r\nconst initialState = {\r\n    posts: null,\r\n    error:null,\r\n    lastPage: 1,\r\n}\r\n\r\nconst posts = handleActions(\r\n    {\r\n        [LIST_POSTS_SUCCESS]: (state, {payload: posts, meta:response}) => ({\r\n            ...state,\r\n            posts,\r\n            lastPage: parseInt(response.headers['last-page'],10)\r\n        }),\r\n        [LIST_POSTS_FAILURE]: (state, {payload:error}) => ({\r\n            ...state,\r\n            error,\r\n        })\r\n    }, initialState,\r\n)\r\n\r\nexport default posts;","import client from \"./client\";\r\nimport qs from 'qs';\r\n\r\nexport const writePost = ({ title, body, tags })=>\r\n    client.post('/api/posts', { title, body, tags});\r\n\r\nexport const readPost = id => client.get(`/api/posts/${id}`);\r\n\r\nexport const listPosts = ({ page, username, tag }) => {\r\n    const queryString = qs.stringify({\r\n        page,\r\n        username,\r\n        tag,\r\n    });\r\n    return client.get(`api/posts?${queryString}`);\r\n}\r\n\r\nexport const updatePost = ({ id, title, body, tags}) =>\r\n    client.patch(`/api/posts/${id}`, {\r\n        title,\r\n        body,\r\n        tags,\r\n    });\r\n\r\nexport const removePost = id => client.delete(`/api/posts/${id}`);","import React, {useEffect } from 'react';\r\nimport qs from 'qs';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PostList from '../../components/posts/PostList';\r\nimport { listPosts } from '../../modules/posts';\r\n\r\nconst PostListContainer = ({ location, match }) => {\r\n    const dispatch = useDispatch();\r\n    const { posts, error, loading, user } = useSelector(\r\n        ({posts, loading, user}) => ({\r\n            posts: posts.posts,\r\n            error: posts.error,\r\n            loading: loading['posts/LIST_POSTS'],\r\n            user: user.user\r\n        }),\r\n    );\r\n    useEffect(()=>{\r\n        const { username } = match.params;\r\n        const { tag, page } = qs.parse(location.search, {\r\n            ignoreQueryPrefix: true,\r\n        });\r\n        dispatch(listPosts({ tag, username, page}));\r\n    }, [dispatch, location.search]);\r\n\r\n    return(\r\n        <PostList \r\n            loading={loading}\r\n            error={error}\r\n            posts={posts}\r\n            showWriteButton={user}\r\n        />\r\n    );\r\n};\r\n\r\nexport default withRouter(PostListContainer);","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport qs from 'qs';\r\nimport Button from '../common/Button';\r\n\r\nconst PaginationBlock = styled.div`\r\n    width: 320px;\r\n    margin: 0 auto;\r\n    display: flex;\r\n    margin-bottom: 5rem;\r\n    justify-content: space-between;\r\n`;\r\n\r\nconst PageNumber = styled.div``;\r\n\r\nconst buildLink = ({ username, tag, page }) => {\r\n    const query = qs.stringify({ tag, page});\r\n    return username ? `/@${username}?${query}` : `/?${query}`;\r\n};\r\n\r\nconst Pagination = ({ page, lastPage, username, tag }) => {\r\n    return(\r\n        <>\r\n        <PaginationBlock>\r\n            <Button \r\n            disabled={page === 1}\r\n            to={\r\n                page === 1 ? undefined : buildLink({ username, tag, page: page-1})\r\n            }>\r\n            이전\r\n            </Button>\r\n            <PageNumber>{page}</PageNumber>\r\n            <Button\r\n                disabled={page===lastPage}\r\n                to={\r\n                    page === lastPage\r\n                        ? undefined\r\n                        : buildLink ({ username, tag, page: page + 1})\r\n                }\r\n                >다음</Button>\r\n        </PaginationBlock>\r\n        <p>Made by Kjm</p>\r\n        </>\r\n    )\r\n}\r\nexport default Pagination","import React from 'react';\r\nimport Pagination from '../../components/posts/Pagination';\r\nimport { useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport qs from 'qs';\r\n\r\nconst PaginationContainer = ({ location, match }) => {\r\n  const { lastPage, posts, loading } = useSelector(({ posts, loading }) => ({\r\n    lastPage: posts.lastPage,\r\n    posts: posts.posts,\r\n    loading: loading['posts/LIST_POSTS'],\r\n  }));\r\n  if (!posts || loading) return null;\r\n\r\n  const { username } = match.params;\r\n  const { tag, page = 1 } = qs.parse(location.search, {\r\n    ignoreQueryPrefix: true,\r\n  });\r\n  return (\r\n    <Pagination\r\n      tag={tag}\r\n      username={username}\r\n      page={parseInt(page, 10)}\r\n      lastPage={lastPage}\r\n    />\r\n  );\r\n};\r\nexport default withRouter(PaginationContainer);","import React from 'react';\r\nimport Button from '../components/common/Button';\r\nimport HeaderContainer from '../containers/common/HeaderContainer';\r\nimport PostList from '../components/posts/PostList';\r\nimport PostListContainer from '../containers/posts/PostListContainer';\r\nimport PaginationContainer from '../containers/posts/PaginationContainer';\r\n\r\nconst PostListPage = () => {\r\n  return (\r\n    <>\r\n      <HeaderContainer />\r\n      <PostListContainer />\r\n      <PaginationContainer />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostListPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport Responsive from '../common/Responsive';\r\nimport SubInfo from '../common/SubInfo';\r\nimport Tags from '../common/Tags';\r\n\r\nconst PostViewerBlock = styled(Responsive)`\r\n  margin-top: 4rem;\r\n`;\r\n\r\nconst PostHead = styled.div`\r\n  border-bottom: 1px solid ${palette.gray[2]};\r\n  padding-bottom: 3rem;\r\n  margin-bottom: 3rem;\r\n  h1 {\r\n    font-size: 3rem;\r\n    line-height: 1.5;\r\n    margin: 0;\r\n  }\r\n// `;\r\n// const SubInfo = styled.div`\r\n//   margin-top: 1rem;\r\n//   color: ${palette.gray[6]};\r\n\r\n//   span + span:before {\r\n//     color: ${palette.gray[5]};\r\n//     padding-left: 0.25rem;\r\n//     padding-right: 0.25rem;\r\n//     content: '\\\\B7'; /*가운뎃점 문자*/\r\n//   }\r\n// `;\r\n\r\n// const Tags = styled.div`\r\n//   margin-top: 0.5rem;\r\n//   .tag {\r\n//     display: inline-block;\r\n//     color: ${palette.cyan[7]};\r\n//     text-decoration: none;\r\n//     margin-right: 0.5rem;\r\n//     &:hover {\r\n//       color: ${palette.cyan[6]};\r\n//     }\r\n//   }\r\n// `;\r\nconst PostContent = styled.div`\r\n  font-size: 1.3125rem;\r\n  color: ${palette.gray[8]};\r\n`;\r\n\r\nconst PostViewer = ({ post, error, loading, actionButtons }) => {\r\n    console.log(post)\r\n  if (error) {\r\n    if (error.response && error.response.status === 404) {\r\n      return <PostViewerBlock>존재하지 않는 포스트입니다.</PostViewerBlock>;\r\n    }\r\n    return <PostViewerBlock>오류발생!</PostViewerBlock>;\r\n  }\r\n  if (loading || !post) {\r\n    console.log('post is not exist')\r\n    return null;\r\n  }\r\n  const { title, body, user, publishedDate, tags } = post;\r\n  return (\r\n    <PostViewerBlock>\r\n      <PostHead>\r\n        <h1>{title}</h1>\r\n        <SubInfo \r\n            username={user.username}\r\n            publishedDate={publishedDate}\r\n            hasMarginTop\r\n        />\r\n        <Tags tags={tags} />\r\n      </PostHead>\r\n      {actionButtons}\r\n      <PostContent dangerouslySetInnerHTML={{ __html: body }} />\r\n    </PostViewerBlock>\r\n  );\r\n};\r\nexport default PostViewer;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as postsAPI from '../lib/api/posts';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\nconst [READ_POST, READ_POST_SUCCESS, READ_POST_FAILURE] =\r\n  createRequestActionTypes('post/READ_POST');\r\nconst UNLOAD_POST = 'post/UNLOAD_POST';\r\n\r\nexport const readPost = createAction(READ_POST, (id) => id);\r\nexport const unloadPost = createAction(UNLOAD_POST);\r\n\r\nconst readPostSaga = createRequestSaga(READ_POST, postsAPI.readPost);\r\nexport function* postSaga() {\r\n  yield takeLatest(READ_POST, readPostSaga);\r\n}\r\n\r\nconst initialState = {\r\n  post: null,\r\n  error: null,\r\n};\r\n\r\nconst post = handleActions(\r\n  {\r\n    [READ_POST_SUCCESS]: (state, { payload: post }) => ({\r\n      ...state,\r\n      post,\r\n    }),\r\n    [READ_POST_FAILURE]: (state, { payload: error }) => ({\r\n      ...state,\r\n      error,\r\n    }),\r\n    [UNLOAD_POST]: () => initialState,\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default post;","import react from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from './Button';\r\n\r\nconst Fullscreen = styled.div`\r\n    position: fixed;\r\n    z-index: 30;\r\n    top: 0;\r\n    left: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    background: rgba(0,0,0,0.25);\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n`;\r\nconst AskModalBlock = styled.div`\r\n    width: 320px;\r\n    background: white;\r\n    padding: 1.5rem;\r\n    border-radius: 5px;\r\n    box-shadow: 0px 0px 8px rgba(0,0,0,0.125);\r\n    h2{\r\n        margin-top: 0;\r\n        margin-bottom: 1rem;\r\n    }\r\n    p{\r\n        margin-bottom: 3rem;\r\n    }\r\n    .buttons{\r\n        display: flex;\r\n        justify-content: flex-end;\r\n    }\r\n`;\r\n\r\nconst StyledButton = styled(Button)`\r\n    height: 2rem;\r\n    &+&{\r\n        margin-left: 0.75rem;\r\n    }\r\n`;\r\n\r\nconst AskModal = ({\r\n    visible,\r\n    title,\r\n    description, \r\n    confirmText='확인',\r\n    cancelText='취소',\r\n    onConfirm,\r\n    onCancel,\r\n}) => {\r\n    if(!visible) return null;\r\n    return(\r\n        <Fullscreen>\r\n            <AskModalBlock>\r\n                <h2>{title}</h2>\r\n                <p>{description}</p>\r\n                <div className=\"buttons\">\r\n                    <StyledButton onClick={onCancel}>{cancelText}</StyledButton>\r\n                    <StyledButton cyan onClick={onConfirm}>{confirmText}</StyledButton>\r\n                </div>\r\n            </AskModalBlock>\r\n        </Fullscreen>\r\n    )\r\n}\r\n\r\nexport default AskModal;","import React from 'react';\r\nimport AskModal from '../common/AskModal';\r\n\r\nconst AskRemoveModal = ({ visible, onConfirm, onCancel}) => {\r\n    return(\r\n        <AskModal \r\n            visible={visible}\r\n            title=\"포스터 삭제\"\r\n            description=\"포스터를 정말 삭제하시겠습니까?\"\r\n            confirmText=\"삭제\"\r\n            onConfirm={onConfirm}\r\n            onCancel={onCancel}\r\n        />\r\n    )\r\n}\r\n\r\nexport default AskRemoveModal;","import React, { useState, useCallback } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport AskRemoveModal from './AskRemoveModal';\r\n\r\nconst PostActionButtonBlock = styled.div`\r\n  display: flex;\r\n  justify-content: flex-end;\r\n  margin-bottom: 2rem;\r\n  margin-top: -1.5rem;\r\n`;\r\nconst ActionButton = styled.button`\r\n  padding: 0.25rem 0.5rem;\r\n  border-radius: 5px;\r\n  color: ${palette.gray[6]};\r\n  font-weight: bold;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 0.875rem;\r\n  cursor: pointer;\r\n  &:hover {\r\n    background: ${palette.gray[1]};\r\n    color: ${palette.cyan[7]};\r\n  }\r\n  & + & {\r\n    margin-left: 0.5rem;\r\n  }\r\n`;\r\n\r\nconst PostActionButtons = ({ onEdit, onRemove }) => {\r\n  const [modal, setModal] = useState(false);\r\n  const onRemoveClick = () => {\r\n    setModal(true);\r\n  };\r\n  const onCancel = () => {\r\n    setModal(false);\r\n  };\r\n  const onConfirm = () => {\r\n    setModal(false);\r\n    onRemove();\r\n  };\r\n  return (\r\n    <>\r\n      <PostActionButtonBlock>\r\n        <ActionButton onClick={onEdit}>수정</ActionButton>\r\n        <ActionButton onClick={onRemoveClick}>삭제</ActionButton>\r\n      </PostActionButtonBlock>\r\n      <AskRemoveModal\r\n        visible={modal}\r\n        onConfirm={onConfirm}\r\n        onCancel={onCancel}\r\n      />\r\n    </>\r\n  );\r\n};\r\nexport default PostActionButtons;\r\n","import { createAction, handleActions } from 'redux-actions';\r\nimport createRequestSaga, {\r\n  createRequestActionTypes,\r\n} from '../lib/createRequestSaga';\r\nimport * as postsAPI from '../lib/api/posts';\r\nimport { takeLatest } from 'redux-saga/effects';\r\n\r\nconst INITIALIZE = 'write/INITIALIZE';\r\nconst CHANGE_FIELD = 'write/CHANGE_FIELD';\r\nconst [WRITE_POST, WRITE_POST_SUCCESS, WRITE_POST_FAILURE] =\r\n  createRequestActionTypes('write/WRITE_POST');\r\nconst SET_ORIGINAL_POST = 'write/SET_ORIGINAL_POST';\r\nconst [UPDATE_POST, UPDATE_POST_SUCCESS, UPDATE_POST_FAILURE] = createRequestActionTypes('write/POST_UPDATE');\r\n\r\nexport const initialize = createAction(INITIALIZE);\r\nexport const changeField = createAction(CHANGE_FIELD, ({ key, value }) => ({\r\n  key,\r\n  value,\r\n}));\r\nexport const writePost = createAction(WRITE_POST, ({title, body, tags})=>({\r\n    title, body, tags\r\n}))\r\nexport const setOriginalPost = createAction(SET_ORIGINAL_POST, post=>post);\r\nexport const updatePost = createAction(\r\n    UPDATE_POST,\r\n    ({ id, title, body, tags }) => ({\r\n        id,\r\n        title,\r\n        body,\r\n        tags,\r\n    }),\r\n)\r\n\r\nconst writePostSaga = createRequestSaga(WRITE_POST, postsAPI.writePost);\r\nconst updatePostSaga = createRequestSaga(UPDATE_POST, postsAPI.updatePost);\r\n\r\nexport function* writeSaga(){\r\n    yield takeLatest(WRITE_POST, writePostSaga);\r\n    yield takeLatest(UPDATE_POST, updatePostSaga);\r\n}\r\n\r\nconst initialState = {\r\n  title: '',\r\n  body: '',\r\n  tags: [],\r\n  post: null,\r\n  postError: null,\r\n  originalPostId: null,\r\n};\r\n\r\nconst write = handleActions(\r\n  {\r\n    [INITIALIZE]: (state) => initialState,\r\n    [CHANGE_FIELD]: (state, { payload: { key, value } }) => ({\r\n      ...state,\r\n      [key]: value,\r\n    }),\r\n    [WRITE_POST]: state => ({\r\n        ...state,\r\n        post: null,\r\n        postError: null,\r\n    }),\r\n    [WRITE_POST_SUCCESS] : (state, {payload: post})=>({\r\n        ...state,\r\n        post\r\n    }),\r\n    [WRITE_POST_FAILURE]: (state, {payload:postError})=> ({\r\n        ...state,\r\n        postError,\r\n    }),\r\n    [SET_ORIGINAL_POST]: (state, {payload:post}) => ({\r\n        ...state,\r\n        title: post.title,\r\n        body: post.body,\r\n        tags: post.tags,\r\n        originalPostId: post._id,\r\n    }),\r\n    [UPDATE_POST_SUCCESS]: (state, {payload:post}) => ({\r\n        ...state,\r\n        post,\r\n    }),\r\n    [UPDATE_POST_FAILURE]: (state, {payload:postError}) => ({\r\n        ...state,\r\n        postError,\r\n    })\r\n  },\r\n  initialState,\r\n);\r\n\r\nexport default write;\r\n","import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { readPost, unloadPost } from '../../modules/post';\r\nimport PostViewer from '../../components/post/PostViewer';\r\nimport PostActionButtons from '../../components/post/PostActionButtons';\r\nimport { setOriginalPost } from '../../modules/write';\r\nimport { removePost } from '../../lib/api/posts';\r\n\r\nconst PostViewerContainer = ({ match, history }) => {\r\n    const {postId} = match.params;\r\n    console.log(postId)\r\n    const dispatch= useDispatch();\r\n    const { post, error, loading, user} = useSelector(({post, loading, user})=>({\r\n        post:post.post,\r\n        error:post.error,\r\n        loading:loading['post/READ_POST'],\r\n        user:user.user,\r\n    }));\r\n\r\n    useEffect(()=>{\r\n        dispatch(readPost(postId));\r\n        return () => {\r\n            dispatch(unloadPost());\r\n        };\r\n    },[dispatch, postId]);\r\n\r\n    const onEdit = () => {\r\n        dispatch(setOriginalPost(post));\r\n        history.push('/write');\r\n    }\r\n\r\n    const onRemove = async () => {\r\n        try{\r\n            await removePost(postId);\r\n            history.push('/');\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    };\r\n\r\n    const ownPost = (user && user._id) === (post && post.user._id);\r\n\r\n    return <PostViewer \r\n        post={post} \r\n        loading={loading} \r\n        error={error}\r\n        actionButtons={ownPost && <PostActionButtons onEdit={onEdit} onRemove={onRemove}/>}/>\r\n};\r\n\r\nexport default withRouter(PostViewerContainer);","import React from 'react';\r\nimport PostViewer from '../components/post/PostViewer';\r\nimport HeaderContainer from '../containers/common/HeaderContainer';\r\nimport PostViewerContainer from '../containers/post/PostViewerContainer';\r\n\r\nconst PostPage = () => {\r\n  return(\r\n    <>\r\n      <HeaderContainer />\r\n      <PostViewerContainer />\r\n    </>\r\n  )\r\n};\r\n\r\nexport default PostPage;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport { Link } from 'react-router-dom';\r\nimport img_flower from '../img/0002.jpg'\r\n\r\nconst AuthTemplateBlock = styled.div`\r\n  position: absolute;\r\n  left: 0;\r\n  right: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  background: ${palette.gray[2]};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-image: url(${img_flower});\r\n`;\r\nconst WhiteBox = styled.div`\r\n  .logo-area {\r\n    display: block;\r\n    padding-bottom: 2rem;\r\n    text-align: center;\r\n    font-weight: bold;\r\n    letter-spacing: 2px;\r\n    font-size:2rem;\r\n    color: green;\r\n  }\r\n  box-shadow: 0 0 8px rgba(0, 0, 0, 0.5);\r\n  padding: 2rem;\r\n  width: 360px;\r\n  background: white;\r\n  border-radius: 10px;\r\n  opacity: 0.8;\r\n`;\r\n\r\nconst AuthTemplate = ({ children }) => {\r\n  return (\r\n    <AuthTemplateBlock>\r\n      <WhiteBox>\r\n        <div className=\"logo-area\">\r\n          <Link to=\"/\">Diary With You</Link>\r\n        </div>\r\n        {children}\r\n      </WhiteBox>\r\n      \r\n    </AuthTemplateBlock>\r\n  );\r\n};\r\nexport default AuthTemplate;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport { Link } from 'react-router-dom';\r\nimport palette from '../../lib/styles/palette';\r\nimport Button from '../common/Button';\r\n\r\nconst AuthFormBlock = styled.div`\r\n  h3 {\r\n    margin: 0;\r\n    color: ${palette.gray[9]};\r\n    margin-bottom: 1rem;\r\n  }\r\n`;\r\n\r\nconst StyledInput = styled.input`\r\n  font-size: 1rem;\r\n  border: none;\r\n  border-bottom: 1px solid ${palette.gray[5]};\r\n  padding-bottom: 0.5rem;\r\n  outline: none;\r\n  width: 100%;\r\n  &:focus {\r\n    color: $oc-teal-7;\r\n    border-bottom: 1px solid ${palette.gray[7]};\r\n  }\r\n  & + & {\r\n    margin-top: 1rem;\r\n  }\r\n`;\r\n\r\nconst Fotter = styled.div`\r\n  margin-top: 2rem;\r\n  text-align: right;\r\n  a {\r\n    color: ${palette.gray[6]};\r\n    text-decoration: underline;\r\n    &:hover {\r\n      color: ${palette.gray[9]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst ButtonWithMarginTop = styled(Button)`\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst textMap = {\r\n  login: '로그인',\r\n  register: '회원가입',\r\n};\r\n\r\nconst ErrorMessage = styled.div`\r\n  color: red;\r\n  text-align: center;\r\n  font-size: 0.875rem;\r\n  margin-top: 1rem;\r\n`;\r\n\r\nconst AuthForm = ({ type, form, onChange, onSubmit, error }) => {\r\n  const text = textMap[type];\r\n  return (\r\n    <AuthFormBlock>\r\n      <h3>{text}</h3>\r\n      <form onSubmit={onSubmit}>\r\n        <StyledInput\r\n          autoComplete=\"username\"\r\n          name=\"username\"\r\n          placeholder=\"Id\"\r\n          onChange={onChange}\r\n          value={form.user}\r\n        />\r\n        <StyledInput\r\n          autoComplate=\"new-password\"\r\n          name=\"password\"\r\n          placeholder=\"Password...\"\r\n          type=\"password\"\r\n          onChange={onChange}\r\n          value={form.password}\r\n        />\r\n        {type === 'register' && (\r\n          <StyledInput\r\n            autoComplate=\"new-password\"\r\n            name=\"passwordConfirm\"\r\n            placeholder=\"PasswordConfirm...\"\r\n            type=\"password\"\r\n            onChange={onChange}\r\n            value={form.passwordConfirm}\r\n          />\r\n        )}\r\n        {error && <ErrorMessage>{error}</ErrorMessage>}\r\n        <ButtonWithMarginTop cyan fullWidth>\r\n          {text}\r\n        </ButtonWithMarginTop>\r\n      </form>\r\n      <Fotter>\r\n        {type === 'login' ? (\r\n          <Link to=\"/register\">회원가입</Link>\r\n        ) : (\r\n          <Link to=\"/login\">로그인</Link>\r\n        )}\r\n      </Fotter>\r\n    </AuthFormBlock>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import { createAction, handleActions } from \"redux-actions\";\r\nimport produce from 'immer';\r\nimport { takeLatest } from 'redux-saga/effects';\r\nimport createRequestSaga, { createRequestActionTypes } from \"../lib/createRequestSaga\";\r\nimport * as authAPI from '../lib/api/auth';\r\n\r\nconst CHANGE_FIELD = 'auth/CHANGE_FIELD';\r\nconst INITIALIZE_FORM = 'auth/INITIALIZE_FORM'\r\n\r\nconst [REGISTER, REGISTER_SUCCESS, REGISTER_FAILURE] = createRequestActionTypes(\r\n    'auth/REGISTER',\r\n)\r\n\r\nconst [LOGIN, LOGIN_SUCCESS, LOGIN_FAILURE] = createRequestActionTypes(\r\n    'auth/LOGIN'\r\n)\r\nexport const changeField = createAction(\r\n    CHANGE_FIELD,\r\n    ({ form, key, value })=>({\r\n        form, //register, login\r\n        key, // username, password, passwordConfirm\r\n        value, //실제 바꾸려는 값\r\n    }),\r\n);\r\nexport const initializeForm = createAction(INITIALIZE_FORM, form=>form);\r\n\r\nexport const register = createAction(REGISTER, ({username, password})=>({\r\n    username, password\r\n}));\r\n\r\nexport const login = createAction(LOGIN, ({ username, password}) => ({\r\n    username, password,\r\n}));\r\n\r\n//사가 생성\r\nconst registerSaga = createRequestSaga(REGISTER, authAPI.register);\r\nconst loginSaga = createRequestSaga(LOGIN, authAPI.login);\r\nexport function* authSaga(){\r\n    yield takeLatest(REGISTER, registerSaga);\r\n    yield takeLatest(LOGIN, loginSaga)\r\n}\r\n\r\nconst initialState = {\r\n    register: {\r\n        username:'',\r\n        password:'',\r\n        passwordConfirm:'',\r\n    },\r\n    login:{\r\n        username:'',\r\n        password:'',\r\n    },\r\n    auth: null,\r\n    authError: null,\r\n};\r\n\r\nconst auth = handleActions(\r\n    {\r\n        [CHANGE_FIELD]: (state, { payload: {form, key, value}}) => \r\n            produce(state, draft =>{\r\n                draft[form][key] = value\r\n            }),\r\n        [INITIALIZE_FORM]: (state, {payload: form }) => ({\r\n            ...state,\r\n            [form]: initialState[form],\r\n            authError: null,\r\n        }),\r\n        [REGISTER_SUCCESS]: (state, {payload: auth})=>({\r\n            ...state,\r\n            authError: null,\r\n            auth,\r\n        }),\r\n        [REGISTER_FAILURE]: (state, {payload:error})=>({\r\n            ...state,\r\n            authError: error,\r\n        }),\r\n        [LOGIN_SUCCESS]: (state,{payload:auth})=>({\r\n            ...state,\r\n            authError: null,\r\n            auth,\r\n        }),\r\n        [LOGIN_FAILURE]: (state, {payload:error}) => ({\r\n            ...state,\r\n            authError: error,\r\n        }),\r\n\r\n    },\r\n    initialState,\r\n);\r\n\r\nexport default auth;","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { changeField, initializeForm, register } from '../../modules/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { check } from '../../modules/user';\r\nimport { withRouter } from 'react-router-dom';\r\n\r\nconst RegisterForm = ({ history }) => {\r\n  const [error, setError] = useState(null);\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.register,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(\r\n      changeField({\r\n        form: 'register',\r\n        key: name,\r\n        value,\r\n      }),\r\n    );\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password, passwordConfirm } = form;\r\n    if([username, password, passwordConfirm].includes('')){\r\n      setError('빈 칸을 모두 입력하세요');\r\n      return;\r\n    }\r\n    if (password !== passwordConfirm) {\r\n      setError('비밀번호가 일치하지 않습니다.');\r\n      dispatch(changeField({form: 'register', key:'passowrd', value:''}));\r\n      dispatch(changeField({form: 'register', key:'passwordConfirm', value:''}));\r\n      return;\r\n    }\r\n    dispatch(register({ username, password }));\r\n  };\r\n  useEffect(() => {\r\n    dispatch(initializeForm('register'));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (authError) {\r\n      if(authError.response.status === 409){\r\n        setError('이미 존재하는 계정입니다.');\r\n        return;\r\n      }\r\n      setError('회원가입실패');\r\n      return;\r\n    }\r\n    if (auth) {\r\n      console.log('회원가입 성공');\r\n      console.log(auth);\r\n      dispatch(check());\r\n    }\r\n  }, [auth, authError, dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      console.log('check API 성공');\r\n      console.log(user);\r\n      history.push('/')\r\n      try{\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n      }catch(e){\r\n        console.log('localStorage is not working')\r\n      }\r\n    }\r\n  }, [history, user]);\r\n\r\n  return (\r\n    <AuthForm\r\n      type=\"register\"\r\n      form={form}\r\n      onChange={onChange}\r\n      onSubmit={onSubmit}\r\n      error={error}\r\n    />\r\n  );\r\n};\r\n\r\nexport default withRouter(RegisterForm);\r\n","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport AuthForm from '../components/auth/AuthForm';\r\nimport RegisterForm from '../containers/auth/RegisterForm';\r\n\r\nconst RegisterPage = () => {\r\n    return (\r\n        <AuthTemplate>\r\n            <RegisterForm />\r\n        </AuthTemplate>\r\n    )\r\n};\r\n\r\nexport default RegisterPage;","import React, {useEffect, useState} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom'; \r\nimport { changeField, initializeForm, login } from '../../modules/auth';\r\nimport AuthForm from '../../components/auth/AuthForm';\r\nimport { check } from '../../modules/user';\r\n\r\nconst LoginForm = ({ history }) => {\r\n  const [error, setError] = useState(null)\r\n\r\n  const dispatch = useDispatch();\r\n  const { form, auth, authError, user } = useSelector(({ auth, user }) => ({\r\n    form: auth.login,\r\n    auth: auth.auth,\r\n    authError: auth.authError,\r\n    user: user.user,\r\n  }));\r\n\r\n  const onChange = (e) => {\r\n    const { value, name } = e.target;\r\n    dispatch(\r\n      changeField({\r\n        form: 'login',\r\n        key: name,\r\n        value,\r\n      }),\r\n    );\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { username, password } = form;\r\n    dispatch(login({ username, password}));\r\n  };\r\n  useEffect(()=>{\r\n      dispatch(initializeForm('login'));\r\n  },[dispatch])\r\n\r\n  useEffect(()=>{\r\n    if(authError){\r\n      console.log('오류발생');\r\n      console.log(authError);\r\n      setError('로그인 실패')\r\n      return;\r\n    }\r\n    if(auth){\r\n      console.log('로그인 성공');\r\n      dispatch(check());\r\n    }\r\n  },[auth, authError, dispatch]);\r\n  \r\n  useEffect(()=>{\r\n    if(user){\r\n      history.push('/')\r\n      try{\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n      }catch(e){\r\n        console.log('localStorage is not working')\r\n      }\r\n    }\r\n  },[history, user])\r\n  \r\n  return(\r\n      <AuthForm \r\n          type=\"login\"\r\n          form={form}\r\n          onChange={onChange}\r\n          onSubmit={onSubmit}\r\n          error={error} \r\n      />\r\n  )\r\n};\r\n\r\nexport default withRouter(LoginForm);","import React from 'react';\r\nimport AuthTemplate from '../components/auth/AuthTemplate';\r\nimport AuthForm from '../components/auth/AuthForm';\r\nimport LoginForm from '../containers/auth/LoginForm';\r\n\r\nconst LoginPage = () => {\r\n    return (\r\n        <AuthTemplate>\r\n            <LoginForm />\r\n        </AuthTemplate>\r\n    )\r\n};\r\n\r\nexport default LoginPage;","import React, { useEffect, useRef } from 'react';\r\nimport Quill from 'quill';\r\nimport 'quill/dist/quill.bubble.css';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\nimport Responsive from '../common/Responsive';\r\n\r\nconst EditorBlock = styled(Responsive)`\r\n  padding-top: 5rem;\r\n  padding-bottom: 5rem;\r\n`;\r\n\r\nconst TitleInput = styled.input`\r\n  font-size: 3rem;\r\n  outline: none;\r\n  padding-bottom: 0.5rem;\r\n  border: none;\r\n  border-bottom: 1px solid ${palette.gray[4]};\r\n  margin-bottom: 2rem;\r\n  width: 100%;\r\n`;\r\n\r\nconst QuillWrapper = styled.div`\r\n  .ql-editor {\r\n    padding: 0;\r\n    min-height: 320px;\r\n    font-size: 1.125rem;\r\n    line-height: 1.5;\r\n  }\r\n  .ql-editor.ql-blank::before {\r\n    left: 0px;\r\n  }\r\n`;\r\n\r\nconst Editor = ({ title, body, onChangeField }) => {\r\n  const quillElement = useRef(null);\r\n  const quillInstance = useRef(null);\r\n\r\n  //https://quilljs.com/docs/modules/toolbar참고\r\n  useEffect(() => {\r\n    quillInstance.current = new Quill(quillElement.current, {\r\n      theme: 'bubble',\r\n      placeholder: '내용을 작성하세오...',\r\n      modules: {\r\n        toolbar: [\r\n          [{ header: '1' }, { header: '2' }],\r\n          ['bold', 'italic', 'underline', 'strike'],\r\n          [{ list: 'ordered' }, { list: 'bullet' }],\r\n          ['blockquote', 'code-block', 'link', 'image'],\r\n        ],\r\n      },\r\n    });\r\n    const quill = quillInstance.current;\r\n    quill.on('text-change', (delta, oldDelta, source) => {\r\n      if (source === 'user') {\r\n        onChangeField({ key: 'body', value: quill.root.innerHTML });\r\n      }\r\n    });\r\n  }, [onChangeField]);\r\n\r\n  const mounted = useRef(false);\r\n  useEffect(()=>{\r\n      if(mounted.current) return;\r\n      mounted.current = true;\r\n      quillInstance.current.root.innerHTML = body;\r\n  }, [body])\r\n\r\n  const onChangeTitle = (e) => {\r\n    onChangeField({ key: 'title', value: e.target.value });\r\n  };\r\n\r\n  return (\r\n    <EditorBlock>\r\n      <TitleInput\r\n        placeholder=\"제목을 입력하시오\"\r\n        onChange={onChangeTitle}\r\n        value={title}\r\n      />\r\n      <QuillWrapper>\r\n        <div ref={quillElement} />\r\n      </QuillWrapper>\r\n    </EditorBlock>\r\n  );\r\n};\r\n\r\nexport default Editor;\r\n","import React, { useState, useCallback, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\nimport palette from '../../lib/styles/palette';\r\n\r\nconst TagBoxBlock = styled.div`\r\n  width: 100%;\r\n  border-top: 1px solid ${palette.gray[2]};\r\n  padding-top: 2rem;\r\n\r\n  h4 {\r\n    color: ${palette.gray[8]};\r\n    margin-top: 0;\r\n    margin-bottom: 0.5rem;\r\n  }\r\n`;\r\nconst TagForm = styled.form`\r\n  border-radius: 4px;\r\n  overflow: hidden;\r\n  display: flex;\r\n  width: 256px;\r\n  border: 1px solid ${palette.gray[9]};\r\n  input,\r\n  button {\r\n    outline: none;\r\n    border: none;\r\n    font-size: 1rem;\r\n  }\r\n  input {\r\n    padding: 0.5rem;\r\n    flex: 1;\r\n    min-width: 0;\r\n  }\r\n  button {\r\n    cursor: pointer;\r\n    padding-right: 1rem;\r\n    padding-left: 1rem;\r\n    border: none;\r\n    background: ${palette.gray[8]};\r\n    color: white;\r\n    font-weight: bold;\r\n    &:hover {\r\n      background: ${palette.gray[5]};\r\n    }\r\n  }\r\n`;\r\n\r\nconst Tag = styled.div`\r\n  margin-top: 0.5rem;\r\n  color: ${palette.cyan[6]};\r\n  cursor: pointer;\r\n  &:hover {\r\n    opacity: 0.5;\r\n  }\r\n`;\r\nconst TagListBlock = styled.div`\r\n  display: flex;\r\n  margin-top: 0.5rem;\r\n  color: ${palette.cyan[5]};\r\n`;\r\n\r\nconst TagItem = React.memo(({ tag, onRemove }) => (\r\n  <Tag onClick={() => onRemove(tag)}>#{tag}</Tag>\r\n));\r\n\r\nconst TagList = React.memo(({ tags, onRemove }) => (\r\n  <TagListBlock>\r\n    {tags && tags.map((tag) => <TagItem key={tag} tag={tag} onRemove={onRemove}/>)}\r\n  </TagListBlock>\r\n));\r\n\r\nconst TagBox = ({ tags, onChangeTags }) => {\r\n  const [input, setInput] = useState('');\r\n  const [localTags, setLocalTags] = useState([]);\r\n\r\n  const insertTag = useCallback(\r\n    (tag) => {\r\n      if (!tag) return;\r\n      if (localTags.includes(tag)) return; //이미 존재한다면 추가하지 않음.\r\n      const nextTags = [...localTags, tag];\r\n      setLocalTags(nextTags);\r\n      onChangeTags(nextTags);\r\n    },\r\n    [localTags, onChangeTags],\r\n  );\r\nconst onRemove = useCallback(\r\n    tag=>{\r\n        setLocalTags(localTags.filter(t=> t !== tag));\r\n    },\r\n    [localTags],\r\n)\r\nconst onChange = useCallback(e=>{\r\n    setInput(e.target.value);\r\n}, []);\r\n\r\nconst onSubmit= useCallback(\r\n    e=>{\r\n        e.preventDefault();\r\n        insertTag(input.trim());\r\n        setInput('');\r\n    },[input, insertTag],\r\n);\r\nuseEffect(()=>{\r\n    setLocalTags(tags);\r\n},[tags]);\r\n\r\n  return (\r\n    <TagBoxBlock>\r\n      <h4>태그</h4>\r\n      <TagForm onSubmit={onSubmit}>\r\n        <input placeholder=\"태그를 입력하시오\" value={input} onChange={onChange} />\r\n        <button type=\"submit\">추가</button>\r\n      </TagForm>\r\n      <TagList tags={localTags} onRemove={onRemove} />\r\n    </TagBoxBlock>\r\n  );\r\n};\r\nexport default TagBox;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport Button from '../common/Button';\r\n\r\nconst WriteActionButtonsBlock = styled.div`\r\n    margin-top: 1rem;\r\n    margin-bottom: 3rem;\r\n    button+button{\r\n        margin-left: 0.5rem;\r\n    }\r\n`;\r\nconst StyledButton = styled(Button)`\r\n    height: 2.215rem;\r\n    &+&{\r\n        margin-left:0.5rem;\r\n    }\r\n`;\r\n\r\nconst WriteActionButtons = ({ onCancel, onPublish, isEdit }) => {\r\n    return(\r\n        <WriteActionButtonsBlock>\r\n            <StyledButton cyan onClick={onPublish}>\r\n                포스트 {isEdit ? '수정' : '등록'}\r\n            </StyledButton>\r\n            <StyledButton onClick={onCancel}>취소</StyledButton>\r\n        </WriteActionButtonsBlock>\r\n    )\r\n}\r\nexport default WriteActionButtons;","import React, { useEffect, useCallback } from 'react';\r\nimport Editor from '../../components/write/Editor';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { changeField, initialize } from '../../modules/write';\r\n\r\nconst EditorContainer = () => {\r\n  const dispatch = useDispatch();\r\n  const { title, body } = useSelector(({ write }) => ({\r\n    title: write.title,\r\n    body: write.body,\r\n  }));\r\n  const onChangeField = useCallback(\r\n    (payload) => dispatch(changeField(payload)),\r\n    [dispatch],\r\n  );\r\n  useEffect(()=>{\r\n      return()=>{\r\n          dispatch(initialize());\r\n      }\r\n  },[dispatch]);\r\n\r\n  return <Editor onChangeField={onChangeField} title={title} body={body} />\r\n};\r\n\r\nexport default EditorContainer;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport TagBox from '../../components/write/TagBox';\r\nimport { changeField } from '../../modules/write';\r\n\r\nconst TagBoxContainer = () => {\r\n    const dispatch = useDispatch();\r\n    const tags = useSelector(state => state.write.tags);\r\n\r\n    const onChangeTags = nextTags => {\r\n        dispatch(\r\n            changeField({\r\n                key:'tags',\r\n                value: nextTags,\r\n            })\r\n        )\r\n    };\r\n    return(\r\n        <TagBox onChangeTags={onChangeTags} tags={tags} />\r\n    )\r\n};\r\nexport default TagBoxContainer;","import React, { useEffect } from 'react';\r\nimport WriteActionButtons from '../../components/write/WriteActionButtons';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { writePost, updatePost } from '../../modules/write';\r\n\r\nconst WriteActionButtonContainer = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const { title, body, tags, post, postError, originalPostId } = useSelector(({ write }) => ({\r\n    title: write.title,\r\n    body: write.body,\r\n    tags: write.tags,\r\n    post: write.post,\r\n    postError: write.postError,\r\n    originalPostId: write.originalPostId\r\n  }));\r\n\r\n  const onPublish = () => {\r\n      if(originalPostId){\r\n          dispatch(updatePost({ title, body, tags, id:originalPostId}));\r\n          return;\r\n      }\r\n    dispatch(\r\n      writePost({\r\n        title,\r\n        body,\r\n        tags,\r\n      }),\r\n    );\r\n  };\r\n  const onCancel = () => {\r\n    history.goBack();\r\n  };\r\n  useEffect(() => {\r\n    if (post) {\r\n      const { _id, user } = post;\r\n      history.push(`@${user.username}/${_id}`);\r\n    }\r\n    if (postError) {\r\n      console.log(postError);\r\n    }\r\n  }, [history, post, postError]);\r\n  return <WriteActionButtons \r\n    onPublish={onPublish} \r\n    onCancel={onCancel}\r\n    isEdit={!!originalPostId} />;\r\n};\r\n\r\nexport default withRouter(WriteActionButtonContainer);\r\n","import React from 'react';\r\nimport Editor from '../components/write/Editor';\r\nimport Responsive from '../components/common/Responsive';\r\nimport TagBox from '../components/write/TagBox';\r\nimport WriteActionButtons from '../components/write/WriteActionButtons';\r\nimport EditorContainer from '../containers/write/EditorContainer';\r\nimport TagBoxContainer from '../containers/write/TagBoxContainer'\r\nimport WriteActionButtonsContainer from '../containers/write/WriteActionButtonsContainer';\r\n\r\nconst WritePage = () => {\r\n    return(\r\n        <Responsive>\r\n            <EditorContainer />\r\n            <TagBoxContainer />\r\n            <WriteActionButtonsContainer />\r\n            <br />\r\n            <br />\r\n        </Responsive>\r\n    )\r\n}\r\n\r\nexport default WritePage;","import React from 'react';\nimport { Route } from 'react-router-dom';\nimport PostListPage from './pages/PostListPage';\nimport PostPage from './pages/PostPage';\nimport RegisterPage from './pages/RegisterPage';\nimport LoginPage from './pages/LoginPage';\nimport WritePage from './pages/WritePage';\n\nconst App = () => {\n  return(\n    <>\n      <Route component={PostListPage} path={['/@:username', '/']} exact />\n      <Route component={LoginPage} path=\"/login\" />\n      <Route component={RegisterPage} path=\"/register\" />\n      <Route component={WritePage} path=\"/write\" />\n      <Route component={PostPage} path=\"/@:username/:postId\" />\n    </>\n  )\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from 'redux';\r\nimport auth, { authSaga } from './auth';\r\nimport loading from './loading';\r\nimport { all } from 'redux-saga/effects';\r\nimport user, { userSaga } from './user';\r\nimport write, { writeSaga } from './write';\r\nimport post, {postSaga} from './post';\r\nimport posts, {postsSaga} from './posts';\r\n\r\nconst rootReducer = combineReducers({\r\n  auth,\r\n  loading,\r\n  user,\r\n  write,\r\n  post,\r\n  posts\r\n});\r\n\r\nexport function* rootSaga() {\r\n  yield all([authSaga(), userSaga(), writeSaga(), postSaga(), postsSaga()]);\r\n}\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer, { rootSaga } from './modules';\nimport { tempSetUser, check } from './modules/user';\n\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(\n  rootReducer,\n  composeWithDevTools(applyMiddleware(sagaMiddleware)),\n);\n\nfunction loadUser() {\n  try {\n    const user = localStorage.getItem('user');\n    if (!user) return;\n    store.dispatch(tempSetUser(user));\n    store.dispatch(check());\n  } catch (e) {\n    console.log('loaclStorage is not working');\n  }\n}\n\nsagaMiddleware.run(rootSaga);\nloadUser();\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}