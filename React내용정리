
React수업방향

1. create-react-app [프로젝트명]
을 사용하지 않습니다.

2. 처음부터 세팅을 한다.
npm을 이용해서 세팅

3. react의 구성요소
	1) 실제페이지가 하나이기 때문에
	압축이 필요하다 => webpack
	2) 신문법 import, async await,
	구문법으로 compile, 번역기
	babel
	3) react


프로젝트 만드는 방법
1. package.json 만들기
	$ npm init -y

2. webpack.config.js을 만든다.
	그 외 파일 및 폴더 생성

라이브러리 설치

[webpack]
	webpack
	webpack-cli
	webpack-dev-server
[babel]
	babel-loader
	@babel/core
	@babel/preset-env
	@babel/preset-react
	@babel/polyfill
[react]
	react
	react-dom
	react-router-dom

package.json에
1. 바벨 설정
2. script 설정



React 수업내용

컴퍼넌트 종류
1) class형 컴퍼넌트
2) function형 컴퍼넌트 O

react-router-dom => path

범위 좁게

React => Redux-Saga => API (Nodejs) => Saga => Passport => MySQL => AWS(인스턴스에 DB, NPM설치)
=> 배포

AWS 백엔드 개발자
돈 들어가고,
백업, Certication, SMS, Load Balancer(교통정리), Auto Scaling(차선 늘려주는)



Axios와 fetch

1. Axios는 외부 모듈 / fetch 내장
2. 성능 Axios > fetch
3. 기능 Axios > fetch

왜 RN 에서는 fetch를 쓰느냐.
Axios를 써도 문제가 크게 없다.

변수
RN이 업데이트가 잦다.
RN 업데이트 => fetch 업데이트
RN 업데이트 !== Axios 업데이트

위험도 (불일치, 의존성) Axios > fetch

보통
웹 => Axios
앱 => fetch